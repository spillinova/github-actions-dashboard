name: Deploy to VPS

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/github-actions-dashboard
  DEPLOY_PATH: ${{ secrets.VPS_DEPLOY_PATH || '/root/github-actions-dashboard' }}

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          driver-opts: image=moby/buildkit:master
          buildkitd-flags: |
            --allow-insecure-entitlement security.insecure
            --allow-insecure-entitlement network.host

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            
            # Create deployment directory
            mkdir -p ${{ env.DEPLOY_PATH }}
            cd ${{ env.DEPLOY_PATH }}
            
            # Create docker-compose.yml
            cat > docker-compose.yml << 'EOF'
            version: '3.8'

            services:
              app:
                image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
                container_name: github-actions-dashboard
                restart: unless-stopped
                ports:
                  - "8000:8000"
                volumes:
                  - ./data:/app/data
                env_file:
                  - .env
                environment:
                  - HOST=0.0.0.0
                  - PORT=8000
                  - PYTHONUNBUFFERED=1
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                  start_period: 30s
                logging:
                  driver: json-file
                  options:
                    max-size: "10m"
                    max-file: "3"
            EOF

            # Create .env file
            cat > .env << EOF
            GITHUB_TOKEN=${{ secrets.GH_PAT }}
            HOST=0.0.0.0
            PORT=8000
            PYTHONUNBUFFERED=1
            EOF

            # Create data directory
            mkdir -p data

            # Clean up and restart
            docker-compose down -v --remove-orphans || true
            docker system prune -f
            
            # Pull and start the service
            echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker-compose pull
            docker-compose up -d
            
            # Verify deployment
            echo "Container status:"
            docker ps -a
            
            echo "Container logs:"
            docker logs github-actions-dashboard --tail 50
            
            echo "Health check:"
            curl -v http://localhost:8000/health
            
            echo "Deployment completed successfully!"
